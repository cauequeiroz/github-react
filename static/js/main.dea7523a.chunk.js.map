{"version":3,"sources":["components/SearchBar.js","components/UserInfo.js","services/GithubAPI.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","key","_ref","target","onChange","value","classes","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","toolbar","react_fontawesome_index_es","githubIcon","icon","grow","search","searchIcon","Search_default","Input_default","placeholder","disableUnderline","inputRoot","input","inputInput","onKeyPress","React","Component","withStyles","theme","width","marginBottom","flexGrow","background","fontSize","defineProperty","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","breakpoints","up","spacing","unit","height","pointerEvents","display","alignItems","justifyContent","color","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","card","padding","avatar","marginRight","bio","maxWidth","divider","margin","loading","user","isLoading","hasUser","hasInvalidUser","image","core_index_es","align","Card_default","container","direction","justify","item","src","variant","name","username","info","map","AUTH","GithubAPI","fetch","concat","then","data","json","fields","avatar_url","login","keys","forEach","indexOf","push","sort","b","stargazers_count","fullname","full_name","description","url","stars","slice","library","add","fab","App","state","repos","isInfoLoading","isReposLoading","handleUserChange","handleReposOpen","_this2","setState","event","open","_this3","components_SearchBar","components_UserInfo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dea7523a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Input from '@material-ui/core/Input';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: 24\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    background: '#24292e'\r\n  },\r\n  githubIcon: {\r\n    fontSize: 30\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleInputChange({ key, target }) {\r\n    const { onChange } = this.props;\r\n\r\n    if (key === 'Enter') {\r\n      onChange(target.value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar className={classes.toolbar}>\r\n            <FontAwesomeIcon\r\n              className={classes.githubIcon}\r\n              icon={['fab', 'github']} />\r\n            <div className={classes.grow} />\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <Input\r\n                placeholder=\"Searchâ€¦\"\r\n                disableUnderline\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                onKeyPress={this.handleInputChange}\r\n              />\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SearchBar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Avatar, Grid, Typography, CircularProgress, Divider } from '@material-ui/core';\r\n\r\nconst styles = {\r\n  card: {\r\n    padding: 24\r\n  },\r\n  avatar: {\r\n    width: 120,\r\n    height: 120,\r\n    marginRight: 48,\r\n    marginBottom: 12\r\n  },\r\n  bio: {\r\n    maxWidth: 280\r\n  },\r\n  divider: {\r\n    margin: '12px 0',\r\n    width: '50%'\r\n  },\r\n  key: {\r\n    display: 'inline-block',\r\n    marginRight: 6\r\n  },\r\n  value: {\r\n    display: 'inline-block',\r\n  },\r\n  loading: {\r\n    display: 'block',\r\n    margin: '0 auto'\r\n  }\r\n}\r\n\r\nconst UserInfo = props => {\r\n  const { classes, user, loading } = props;\r\n\r\n  const isLoading = !!loading;\r\n  const hasUser = !!user;\r\n  const hasInvalidUser = user && !user.image;\r\n  \r\n  if (isLoading) return (\r\n    <CircularProgress className={classes.loading} />\r\n  );\r\n\r\n  if (!hasUser) return (\r\n    <Typography align=\"center\">\r\n      type a username to search.\r\n    </Typography>\r\n  );\r\n\r\n  if (hasInvalidUser) return (\r\n    <Typography align=\"center\">\r\n      you must type a valid github username.\r\n    </Typography>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Grid container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\">\r\n        \r\n        <Grid item>\r\n          <Avatar\r\n          src={user.image}\r\n          className={classes.avatar} />\r\n\r\n          <Typography variant=\"title\" >{user.name}</Typography>\r\n          <Typography variant=\"subheading\" >@{user.username}</Typography>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          {user.bio && (<div>\r\n            <Typography className={classes.bio}>{user.bio}</Typography>\r\n            <Divider className={classes.divider} />\r\n          </div>)}\r\n\r\n          {user.info.map(({key, value}) => (\r\n            <div key={key}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                className={classes.key}>{key}:</Typography>\r\n              <Typography\r\n                className={classes.value}>{value}</Typography>\r\n            </div>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserInfo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(UserInfo);","const URL = 'https://api.github.com/users/';\r\nconst AUTH = '?client_id=8504348';\r\n\r\nconst getUserInfo = user => fetch(`${URL + user + AUTH}`)\r\n  .then(data => data.json())\r\n  .then(data => {\r\n    const fields = [\r\n      'type', 'company', 'blog', 'location', 'email',\r\n      'public_repos', 'public_gists', 'followers', 'following'\r\n    ];\r\n\r\n    const user = {\r\n      image: data.avatar_url,\r\n      name: data.name,\r\n      username: data.login,\r\n      bio: data.bio,\r\n      info: []\r\n    };\r\n\r\n    Object.keys(data).forEach(item => {\r\n      if (fields.indexOf(item) !== -1) {\r\n        if (data[item]) {\r\n          user.info.push({ key: item, value: data[item] });\r\n        }\r\n      }\r\n    });\r\n\r\n    return user;\r\n  });\r\n\r\n\r\nconst getUserRepos = user => fetch(`${URL + user}/repos${AUTH}`)\r\n  .then(data => data.json())\r\n  .then(data => data.sort((a, b) => b.stargazers_count - a.stargazers_count))\r\n  .then(data => data.map(item => ({\r\n    fullname: item.full_name,\r\n    description: item.description,\r\n    url: item.url,\r\n    stars: item.stargazers_count\r\n  })))\r\n  .then(data => data.slice(0, 5));\r\n\r\nexport default {\r\n  getUserInfo,\r\n  getUserRepos\r\n};","import React, { Component } from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport SearchBar from './components/SearchBar';\r\nimport UserInfo from './components/UserInfo';\r\nimport GithubAPI from './services/GithubAPI';\r\n\r\nlibrary.add(fab);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: null,\r\n      repos: null,\r\n      isInfoLoading: false,\r\n      isReposLoading: false\r\n    }\r\n\r\n    this.handleUserChange = this.handleUserChange.bind(this);\r\n    this.handleReposOpen = this.handleReposOpen.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.handleUserChange('cauequeiroz');\r\n  }\r\n\r\n  handleUserChange(user) {\r\n    this.setState({ isInfoLoading: true });\r\n\r\n    GithubAPI.getUserInfo(user)\r\n      .then(user => this.setState({ user, isInfoLoading: false, repos: null }));\r\n  }\r\n\r\n  handleReposOpen(event, open) {\r\n    if (!open) return;\r\n\r\n    this.setState({ isReposLoading: true });\r\n\r\n    GithubAPI.getUserRepos(this.state.user.username)\r\n      .then(repos => this.setState({ repos, isReposLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar\r\n          onChange={this.handleUserChange} />\r\n        <UserInfo\r\n          loading={this.state.isInfoLoading}\r\n          user={this.state.user} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}